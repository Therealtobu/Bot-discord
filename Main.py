import os
import discord
from discord.ext import commands
import random
from keep_alive import keep_alive
import asyncio
import yt_dlp
import tempfile

# -------------------------
# C·∫•u h√¨nh bot
# -------------------------
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")

# Verify Config
ROLE_ID = 1400724722714542111
VERIFY_CHANNEL_ID = 1400732340677771356

# Ticket Config
GUILD_ID = 1372215595218505891
TICKET_CHANNEL_ID = 1400750812912685056
SUPPORTERS = ["__tobu", "caycotbietmua"]

# Trigger Words
TRIGGER_WORDS = [
    "hack", "hack android", "hack ios",
    "client android", "client ios",
    "executor android", "executor ios",
    "delta", "krnl"
]

# Intents
intents = discord.Intents.default()
intents.members = True
intents.presences = True
intents.message_content = True

bot = commands.Bot(command_prefix="/", intents=intents)

# -------------------------
# Verify Button
# -------------------------
class VerifyButton(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="‚úÖ Verify / X√°c Th·ª±c", style=discord.ButtonStyle.green)
    async def verify_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        role = interaction.guild.get_role(ROLE_ID)
        member = interaction.user

        if role in member.roles:
            await interaction.response.send_message("‚úÖ B·∫°n ƒë√£ ƒë∆∞·ª£c x√°c th·ª±c tr∆∞·ªõc ƒë√≥!", ephemeral=True)
        else:
            await member.add_roles(role)
            await interaction.response.send_message("üéâ B·∫°n ƒë√£ ƒë∆∞·ª£c x√°c th·ª±c th√†nh c√¥ng!", ephemeral=True)

# -------------------------
# Ticket Buttons
# -------------------------
class CloseTicketView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="üîí Close Ticket", style=discord.ButtonStyle.red)
    async def close(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_message("üîí Ticket s·∫Ω b·ªã ƒë√≥ng trong 3 gi√¢y...", ephemeral=True)
        await asyncio.sleep(3)
        await interaction.channel.delete()

class CreateTicketView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="üì© T·∫°o Ticket", style=discord.ButtonStyle.green)
    async def create_ticket(self, interaction: discord.Interaction, button: discord.ui.Button):
        guild = bot.get_guild(GUILD_ID)
        supporters_online = []

        for member in guild.members:
            if member.name in SUPPORTERS and member.status != discord.Status.offline:
                supporters_online.append(member)

        if not supporters_online:
            await interaction.response.send_message("‚ùå Hi·ªán kh√¥ng c√≥ supporter n√†o online, vui l√≤ng th·ª≠ l·∫°i sau.", ephemeral=True)
            return

        supporter = random.choice(supporters_online)

        await interaction.response.send_message(
            f"‚úÖ **{supporter.display_name}** ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t ƒë·ªÉ h·ªó tr·ª£ cho b·∫°n, vui l√≤ng ki·ªÉm tra ticket m·ªõi!",
            ephemeral=True
        )

        overwrites = {
            guild.default_role: discord.PermissionOverwrite(view_channel=False),
            interaction.user: discord.PermissionOverwrite(view_channel=True, send_messages=True),
            supporter: discord.PermissionOverwrite(view_channel=True, send_messages=True),
            guild.me: discord.PermissionOverwrite(view_channel=True, send_messages=True)
        }
        ticket_channel = await guild.create_text_channel(
            f"ticket-{interaction.user.name}",
            overwrites=overwrites
        )

        embed = discord.Embed(
            title="üé´ Ticket H·ªó Tr·ª£",
            description=f"{supporter.mention} s·∫Ω s·ªõm h·ªó tr·ª£ b·∫°n.\nVui l√≤ng n√≥i v·∫•n ƒë·ªÅ b·∫°n c·∫ßn h·ªó tr·ª£.",
            color=discord.Color.blue()
        )
        await ticket_channel.send(content=interaction.user.mention, embed=embed, view=CloseTicketView())

# -------------------------
# Ph√°t nh·∫°c YouTube
# -------------------------
@bot.command(name="play")
async def play(ctx, *, url: str):
    if not ctx.author.voice or not ctx.author.voice.channel:
        await ctx.send("‚ùå B·∫°n c·∫ßn v√†o voice channel tr∆∞·ªõc!")
        return

    voice_channel = ctx.author.voice.channel
    vc = discord.utils.get(bot.voice_clients, guild=ctx.guild)

    if not vc:
        vc = await voice_channel.connect()

    ydl_opts = {"format": "bestaudio/best"}
    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        info = ydl.extract_info(url, download=False)
        audio_url = info['url']
        vc.play(discord.FFmpegPCMAudio(audio_url), after=lambda e: print("Ho√†n th√†nh ph√°t nh·∫°c"))

    await ctx.send(f"üéµ ƒêang ph√°t: **{info['title']}**")

@bot.command(name="stop")
async def stop(ctx):
    vc = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    if vc:
        await vc.disconnect()
        await ctx.send("‚èπ ƒê√£ d·ª´ng ph√°t nh·∫°c")
    else:
        await ctx.send("‚ùå Bot kh√¥ng ·ªü trong voice channel")

# -------------------------
# On Ready
# -------------------------
@bot.event
async def on_ready():
    print(f"‚úÖ Bot ƒë√£ ƒëƒÉng nh·∫≠p: {bot.user}")

    verify_channel = bot.get_channel(VERIFY_CHANNEL_ID)
    if verify_channel:
        embed = discord.Embed(
            title="X√°c Th·ª±c Th√†nh Vi√™n",
            description="B·∫•m n√∫t **Verify/X√°c Th·ª±c** ·ªü d∆∞·ªõi ƒë·ªÉ c√≥ th·ªÉ t∆∞∆°ng t√°c trong nh√≥m\n‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è",
            color=discord.Color.green()
        )
        await verify_channel.send(embed=embed, view=VerifyButton())

    ticket_channel = bot.get_channel(TICKET_CHANNEL_ID)
    if ticket_channel:
        embed = discord.Embed(
            title="üì¢ H·ªó Tr·ª£",
            description=(
                "N·∫øu b·∫°n c·∫ßn **H·ªó Tr·ª£** h√£y b·∫•m n√∫t **T·∫°o Ticket** ·ªü d∆∞·ªõi\n"
                "---------------------\n"
                "L∆ØU √ù: Kh√¥ng spam nhi·ªÅu ticket.\n"
                "Khi t·∫°o ticket th√¨ **n√≥i th·∫≥ng v·∫•n ƒë·ªÅ lu√¥n**."
            ),
            color=discord.Color.orange()
        )
        await ticket_channel.send(embed=embed, view=CreateTicketView())

# -------------------------
# On Message (Trigger)
# -------------------------
@bot.event
async def on_message(message):
    if message.author.bot:
        return

    content = message.content.lower()

    if (
        "c√≥" in content
        and ("kh√¥ng" in content or "ko" in content)
        and any(keyword in content for keyword in TRIGGER_WORDS)
    ):
        embed = discord.Embed(
            title="üìå C√°ch t·∫£i v√† client h·ªó tr·ª£",
            description=(
                "**N·∫øu b·∫°n kh√¥ng bi·∫øt c√°ch t·∫£i th√¨ ƒë√¢y nha**\n"
                "üëâ [B·∫•m v√†o ƒë√¢y ƒë·ªÉ xem h∆∞·ªõng d·∫´n TikTok](https://vt.tiktok.com/ZSSdjBjVE/)\n\n"
                "**ƒê·ªëi v·ªõi IOS**\n"
                "üì• Krnl VNG: [T·∫£i](https://www.mediafire.com/file/jfx8ynxsxwgyok1/KrnlxVNG+V10.ipa/file)\n"
                "üì• Delta X VNG Fix Lag: [T·∫£i](https://www.mediafire.com/file/7hk0mroimozu08b/DeltaxVNG+Fix+Lag+V6.ipa/file)\n\n"
                "**ƒê·ªëi v·ªõi Android**\n"
                "üì• Krnl VNG: [T·∫£i](https://tai.natushare.com/GAMES/Blox_Fruit/Blox_Fruit_Krnl_VNG_2.681_BANDISHARE.apk)\n"
                "üì• File login Delta: [T·∫£i](https://link.nestvui.com/BANDISHARE/GAME/Blox_Fruit/Roblox_VNG_Login_Delta_BANDISHARE.apk)\n"
                "üì• File hack Delta X VNG: [T·∫£i](https://download.nestvui.com/BANDISHARE/GAME/Blox_Fruit/Delta_X_VNG_V65_BANDISHARE.iO.apk)\n\n"
                "‚ú® Ch√∫c b·∫°n m·ªôt ng√†y vui v·∫ª"
            ),
            color=discord.Color.blue()
        )
        await message.reply(embed=embed)
        return

    await bot.process_commands(message)

# -------------------------
# Run Bot
# -------------------------
keep_alive()

if not DISCORD_TOKEN:
    print("‚ùå L·ªói: Ch∆∞a ƒë·∫∑t DISCORD_TOKEN trong Environment Variables c·ªßa Render")
else:
    bot.run(DISCORD_TOKEN)
